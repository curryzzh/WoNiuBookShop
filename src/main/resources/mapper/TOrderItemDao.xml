<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace=".dao.TOrderItemDao">

    <resultMap type=".entity.TOrderItem" id="TOrderItemMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="bookid" column="bookId" jdbcType="INTEGER"/>
        <result property="bookname" column="bookName" jdbcType="VARCHAR"/>
        <result property="price" column="price" jdbcType="NUMERIC"/>
        <result property="bcount" column="bcount" jdbcType="INTEGER"/>
        <result property="sumprice" column="sumprice" jdbcType="NUMERIC"/>
        <result property="orderid" column="orderId" jdbcType="INTEGER"/>
        <result property="createtime" column="createtime" jdbcType="TIMESTAMP"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="TOrderItemMap">
        select id,
               bookId,
               bookName,
               price,
               bcount,
               sumprice,
               orderId,
               createtime
        from t_order_item
        where id = #{id}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="TOrderItemMap">
        select
        id, bookId, bookName, price, bcount, sumprice, orderId, createtime
        from t_order_item
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="bookid != null">
                and bookId = #{bookid}
            </if>
            <if test="bookname != null and bookname != ''">
                and bookName = #{bookname}
            </if>
            <if test="price != null">
                and price = #{price}
            </if>
            <if test="bcount != null">
                and bcount = #{bcount}
            </if>
            <if test="sumprice != null">
                and sumprice = #{sumprice}
            </if>
            <if test="orderid != null">
                and orderId = #{orderid}
            </if>
            <if test="createtime != null">
                and createtime = #{createtime}
            </if>
        </where>
        limit #{pageable.offset}, #{pageable.pageSize}
    </select>

    <!--统计总行数-->
    <select id="count" resultType="java.lang.Long">
        select count(1)
        from t_order_item
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="bookid != null">
                and bookId = #{bookid}
            </if>
            <if test="bookname != null and bookname != ''">
                and bookName = #{bookname}
            </if>
            <if test="price != null">
                and price = #{price}
            </if>
            <if test="bcount != null">
                and bcount = #{bcount}
            </if>
            <if test="sumprice != null">
                and sumprice = #{sumprice}
            </if>
            <if test="orderid != null">
                and orderId = #{orderid}
            </if>
            <if test="createtime != null">
                and createtime = #{createtime}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into t_order_item(bookId, bookName, price, bcount, sumprice, orderId, createtime)
        values (#{bookid}, #{bookname}, #{price}, #{bcount}, #{sumprice}, #{orderid}, #{createtime})
    </insert>

    <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true">
        insert into t_order_item(bookId, bookName, price, bcount, sumprice, orderId, createtime)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.bookid}, #{entity.bookname}, #{entity.price}, #{entity.bcount}, #{entity.sumprice},
            #{entity.orderid}, #{entity.createtime})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="id" useGeneratedKeys="true">
        insert into t_order_item(bookId, bookName, price, bcount, sumprice, orderId, createtime)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.bookid}, #{entity.bookname}, #{entity.price}, #{entity.bcount}, #{entity.sumprice},
            #{entity.orderid}, #{entity.createtime})
        </foreach>
        on duplicate key update
        bookId = values(bookId),
        bookName = values(bookName),
        price = values(price),
        bcount = values(bcount),
        sumprice = values(sumprice),
        orderId = values(orderId),
        createtime = values(createtime)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update t_order_item
        <set>
            <if test="bookid != null">
                bookId = #{bookid},
            </if>
            <if test="bookname != null and bookname != ''">
                bookName = #{bookname},
            </if>
            <if test="price != null">
                price = #{price},
            </if>
            <if test="bcount != null">
                bcount = #{bcount},
            </if>
            <if test="sumprice != null">
                sumprice = #{sumprice},
            </if>
            <if test="orderid != null">
                orderId = #{orderid},
            </if>
            <if test="createtime != null">
                createtime = #{createtime},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete
        from t_order_item
        where id = #{id}
    </delete>

</mapper>

